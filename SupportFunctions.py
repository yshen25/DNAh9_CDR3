from openpyxl import load_workbook, Workbook

workbook = load_workbook(filename="Dataset.xlsx")
sheet = workbook['metastatic and primary CDR3s b']
sheet2 = workbook['DNAH9']
sheet3 = workbook['clinical']
sheet4 = workbook['PatientSurvivalChart']

workbook = load_workbook(filename="Dataset.xlsx")
CDR3File = workbook['metastatic and primary CDR3s b']
DNAH9 = workbook['DNAH9']
Clinical = workbook['clinical']
PatientSurvivalChart = workbook['PatientSurvivalChart']

def get_KD_original():
    """ Function which returns the original KD hydropathy lookup table
    """    
    
    return  {'I': 4.5,'V': 4.2,'L': 3.8,'F': 2.8,
             'C': 2.5,'M': 1.9,'A': 1.8,'G': -0.4,
             'T': -0.7,'S': -0.8,'W': -0.9,'Y': -1.3,
             'P': -1.6,'H': -3.2,'E': -3.5,'Q': -3.5,
             'D': -3.5,'N': -3.5,'K': -3.9,'R': -4.5}

def get_AA_charge(Mutation):
    """ Function which returns the Charge Value for an Amino Acid
    """
    Change = "N/A"
    AA_Charge_Table = {'I': 0,'V': 0,'L': 0,'F': 0,
             'C': 0,'M': 0,'A': 0,'G': 0,'T': 0,
             'S': 0,'W': 0,'Y': 0,'P': 0,'H': 0,
             'E': -1,'Q': 0,'D': -1,'N': 0,'K': 1,
             'R': 1}
    AA1 = AA_Charge_Table[Mutation[0]]
    AA2 = AA_Charge_Table[Mutation[len(Mutation)-1]]
    if AA1 == 0 and AA2 == -1:
        Change = -1
    elif AA1 == 0 and AA2 == 0:
        Change = 0
    elif AA1 == 0 and AA2 == 1:
        Change = 1
    elif AA1 == 1 and AA2 == -1:
        Change = -2
    elif AA1 == 1 and AA2 == 0:
        Change = -1
    elif AA1 == 1 and AA2 == 1:
        Change = 0
    elif AA1 == -1 and AA2 == -1:
        Change = 0
    elif AA1 == -1 and AA2 == 0:
        Change = 1
    elif AA1 == -1 and AA2 == 1:
        Change = 2
    else:
        print(AA1,AA2)
    
    return Change

def CalculateNCPR(Sequence):
    """ Function which Calculates NCPR by adding all the charges of each AA
        and divides by the total number of AAs in the Sequence
    """
    AA_Charge_Table = {'I': 0,'V': 0,'L': 0,'F': 0,
             'C': 0,'M': 0,'A': 0,'G': 0,'T': 0,
             'S': 0,'W': 0,'Y': 0,'P': 0,'H': 0,
             'E': -1,'Q': 0,'D': -1,'N': 0,'K': 1,
             'R': 1}
    
    totalCharge = 0
    for AA in Sequence:
        Charge = AA_Charge_Table[AA]
        totalCharge += Charge
    NCPR = totalCharge/len(Sequence)
    return NCPR

def MonthsLeftFunc(ID):
    """Function to find the number of days a patient survived
    and return it in months. (One month equals 30 days)
    If patient is still alive it returns N/A
    """
    for y in range(2, Clinical.max_row + 1):
        ID2 = Clinical["B{cellRow}".format(cellRow = y)].value
        if ID == ID2:
            try:
                daysLeft = int(Clinical["J{cellRow}".format(cellRow = y)].value)
                return int(daysLeft/30)
            except:
                return 500

def PercentAlive(Major_Dictionary, Pathway):
    import matplotlib.pyplot as plt
    
    """Function to calculate the survival charts"""
    
    DeathsPerMonth_Comp = {} #Holds the number of patients that died on each month
                        #from 1-500 that are complimentary
    
    DeathsPerMonth_Non = {}  #Holds the number of patients that died on each month
                        #from 1-500 that are NONcomplimentary
    x = 0
    while x < 501: #Populates both dictionaries with 0 for 1-500
        DeathsPerMonth_Comp[x] = 0
        DeathsPerMonth_Non[x] = 0
        x+=1
    
    totalCompPatientNumber = 0
    totalNonPatientNumber = 0

    for Patient_ID in Major_Dictionary:        
        Complimentary = Major_Dictionary[Patient_ID]["Complimentary"]
        try:
            MonthsLeft = int(Major_Dictionary[Patient_ID]["Months Left"])
        except Exception as e:
            MonthsLeft = 500 # something at the end of the range of the chart
        if Complimentary == True:
            totalCompPatientNumber += 1
            DeathsPerMonth_Comp[MonthsLeft] += 1
        if Complimentary == False:
            totalNonPatientNumber += 1
            DeathsPerMonth_Non[MonthsLeft] += 1
    AliveStillComp = totalCompPatientNumber
    AliveStillNon = totalNonPatientNumber
    for x in DeathsPerMonth_Comp:
        if x < 150:
            percentAlive = 100*AliveStillComp/totalCompPatientNumber
            #plt.scatter(int(x),percentAlive,marker = 'o',c='blue',linestyle='-')
            plt.plot(int(x),percentAlive, '.b-')
            AliveStillComp -= DeathsPerMonth_Comp[x]
    for x in DeathsPerMonth_Non:
        if x < 150:
            percentAlive = 100*AliveStillNon/totalNonPatientNumber
            #plt.scatter(int(x),percentAlive, c = 'red')
            plt.plot(int(x),percentAlive, '.r-')
            AliveStillNon -= DeathsPerMonth_Non[x]
    plt.plot(0,100, c='blue', label="Complimentary")
    plt.plot(0,100, c='red', label="NonComplimentary")
    plt.legend(loc="upper right")
    plt.xlabel('Months Passed')
    plt.ylabel('Percent Alive')
    if Pathway == "Old":
        plt.title('Old Method')
    elif Pathway == "New":
        plt.title('New Method')
    plt.show()

def peptideClevage():
    '''Function to calculate all possible peptides from DNAH9'''

    #This is the results from a clevage analysis of DNAH9.
    PepSites = [1,3,10,11,12,23,25,27,31,32,33,34,36,43,45,52,56,58,60,62,71,72,73,74,75,79,81,82,83,87,89,95,100,101,102,103,104,105,116,117,118,120,121,125,130,132,133,135,136,140,142,144,145,149,152,158,162,169,173,177,180,181,183,185,186,188,194,195,197,205,206,213,215,217,222,224,226,228,230,231,232,233,234,240,241,250,252,254,255,259,264,265,266,269,272,274,275,277,279,280,281,284,288,292,294,295,296,302,303,304,313,314,316,318,320,322,323,328,331,335,341,342,344,345,346,352,358,360,361,362,365,368,369,376,377,382,383,384,387,393,394,396,401,403,404,405,406,408,418,419,425,426,428,430,434,435,436,437,439,445,446,448,449,452,453,457,459,462,465,467,470,471,479,482,489,490,491,492,493,499,502,503,508,512,515,518,519,522,529,531,532,533,534,540,544,545,547,549,553,554,560,561,566,567,568,570,571,573,574,576,584,585,589,595,597,600,602,604,607,611,612,613,617,618,625,628,631,634,636,644,647,648,654,655,658,661,662,663,666,670,673,676,678,682,683,684,685,690,692,694,696,700,704,705,707,709,710,715,716,724,725,726,735,736,739,741,749,750,751,753,756,758,760,761,765,768,770,772,779,781,789,793,797,800,804,806,808,814,818,825,826,827,829,832,836,837,839,846,849,850,852,853,854,860,863,864,868,870,871,873,880,883,887,890,891,897,898,899,903,904,905,906,907,913,914,919,920,922,924,926,931,933,934,936,937,941,942,948,952,956,957,959,962,963,964,965,966,969,975,977,979,985,988,989,990,992,993,999,1000,1002,1006,1013,1015,1016,1017,1021,1025,1028,1030,1031,1034,1035,1037,1040,1044,1054,1055,1058,1060,1062,1065,1068,1069,1072,1075,1081,1084,1087,1092,1096,1097,1103,1105,1106,1107,1112,1117,1118,1119,1122,1126,1127,1128,1133,1134,1135,1136,1137,1145,1148,1152,1153,1155,1156,1158,1165,1169,1173,1175,1176,1177,1179,1183,1187,1188,1189,1190,1191,1194,1198,1201,1202,1204,1208,1209,1212,1215,1220,1222,1223,1224,1230,1238,1243,1247,1249,1252,1255,1257,1258,1265,1268,1272,1275,1281,1282,1284,1289,1290,1292,1293,1297,1303,1311,1312,1316,1318,1319,1324,1325,1329,1332,1334,1348,1350,1353,1359,1363,1364,1367,1370,1376,1381,1384,1386,1389,1390,1392,1395,1397,1399,1405,1406,1408,1409,1411,1413,1415,1416,1424,1426,1431,1435,1437,1440,1444,1447,1449,1451,1459,1460,1461,1462,1468,1471,1472,1477,1479,1486,1487,1490,1492,1495,1498,1500,1501,1502,1509,1511,1512,1515,1517,1519,1521,1522,1525,1532,1534,1536,1541,1542,1543,1550,1553,1555,1564,1567,1572,1573,1575,1576,1579,1583,1585,1590,1593,1594,1597,1599,1604,1605,1606,1607,1612,1613,1616,1623,1625,1627,1629,1631,1632,1638,1639,1641,1643,1654,1656,1657,1659,1663,1664,1665,1666,1676,1683,1684,1687,1689,1691,1693,1699,1701,1702,1710,1711,1716,1718,1720,1726,1731,1733,1735,1738,1742,1749,1752,1757,1760,1763,1764,1765,1768,1770,1779,1784,1792,1793,1794,1805,1810,1811,1812,1814,1818,1820,1822,1825,1832,1834,1836,1837,1843,1848,1853,1854,1856,1860,1862,1864,1876,1877,1881,1883,1892,1893,1894,1900,1902,1909,1910,1918,1924,1927,1931,1934,1935,1937,1939,1952,1953,1955,1956,1962,1968,1969,1972,1976,1979,1982,1986,1987,1989,1990,1996,2002,2006,2009,2016,2019,2026,2027,2029,2031,2033,2036,2040,2042,2047,2051,2052,2053,2054,2057,2058,2059,2064,2069,2070,2071,2072,2081,2082,2087,2089,2091,2093,2097,2101,2103,2105,2106,2111,2113,2114,2115,2116,2117,2120,2122,2123,2124,2132,2133,2134,2135,2137,2141,2147,2148,2149,2150,2157,2160,2161,2164,2168,2170,2171,2172,2180,2183,2185,2197,2201,2209,2210,2211,2213,2218,2223,2224,2225,2226,2233,2234,2238,2241,2248,2250,2251,2255,2258,2262,2263,2264,2265,2266,2268,2271,2272,2279,2281,2285,2286,2287,2290,2292,2294,2298,2301,2302,2304,2305,2312,2316,2317,2318,2320,2321,2322,2324,2329,2330,2333,2335,2337,2339,2345,2347,2351,2352,2355,2363,2370,2373,2376,2377,2379,2380,2382,2386,2387,2394,2396,2398,2401,2402,2406,2407,2409,2410,2411,2417,2418,2420,2427,2428,2429,2432,2434,2435,2436,2438,2439,2441,2445,2447,2449,2451,2452,2458,2460,2462,2463,2464,2466,2467,2476,2477,2487,2488,2490,2491,2492,2493,2495,2500,2501,2502,2503,2507,2509,2510,2516,2520,2522,2526,2527,2528,2530,2532,2539,2540,2541,2542,2547,2549,2555,2558,2563,2564,2568,2570,2573,2574,2576,2579,2581,2587,2588,2589,2590,2593,2600,2602,2605,2606,2612,2613,2614,2615,2617,2622,2627,2629,2630,2631,2633,2634,2635,2636,2637,2642,2644,2646,2651,2652,2654,2656,2657,2658,2661,2662,2666,2667,2675,2676,2677,2679,2680,2686,2689,2690,2694,2697,2698,2701,2706,2707,2708,2714,2715,2720,2723,2727,2731,2735,2736,2737,2738,2743,2747,2755,2756,2758,2759,2760,2768,2771,2774,2776,2777,2781,2782,2784,2791,2795,2797,2800,2810,2812,2813,2814,2822,2823,2824,2831,2836,2837,2844,2849,2851,2852,2853,2857,2862,2864,2867,2869,2876,2879,2880,2881,2882,2895,2899,2900,2908,2909,2918,2921,2922,2925,2938,2940,2949,2951,2953,2955,2958,2962,2964,2973,2977,2980,2984,2989,2992,2994,2995,2996,2997,3007,3008,3013,3014,3018,3022,3029,3030,3036,3038,3042,3045,3047,3048,3050,3051,3054,3055,3057,3060,3062,3069,3073,3074,3075,3076,3081,3083,3086,3088,3089,3090,3095,3097,3098,3100,3110,3111,3113,3117,3120,3122,3136,3137,3139,3140,3142,3143,3144,3150,3157,3160,3162,3164,3167,3172,3173,3175,3176,3183,3185,3188,3192,3194,3195,3196,3204,3208,3210,3213,3215,3217,3218,3225,3228,3230,3240,3244,3245,3250,3254,3255,3256,3258,3260,3275,3276,3278,3282,3285,3286,3289,3291,3296,3303,3308,3310,3313,3319,3320,3324,3326,3327,3331,3332,3345,3347,3351,3362,3369,3374,3376,3382,3389,3390,3392,3395,3396,3397,3401,3402,3408,3409,3410,3413,3417,3419,3421,3422,3423,3426,3428,3429,3430,3435,3437,3438,3450,3455,3456,3457,3462,3464,3470,3475,3477,3480,3484,3489,3492,3498,3502,3508,3509,3510,3513,3520,3521,3524,3525,3530,3531,3532,3537,3538,3541,3545,3549,3551,3552,3553,3556,3557,3558,3562,3564,3566,3568,3572,3573,3577,3579,3586,3589,3593,3601,3602,3603,3605,3607,3612,3614,3616,3617,3619,3623,3624,3626,3627,3630,3634,3640,3641,3644,3648,3654,3656,3658,3663,3666,3667,3668,3671,3675,3682,3684,3686,3689,3692,3699,3701,3703,3704,3710,3712,3713,3714,3716,3723,3726,3730,3736,3738,3739,3741,3743,3746,3747,3754,3755,3758,3760,3762,3763,3764,3765,3772,3774,3776,3778,3779,3782,3786,3787,3790,3792,3793,3798,3802,3803,3804,3807,3810,3813,3817,3822,3824,3826,3827,3828,3830,3835,3842,3845,3848,3851,3853,3854,3855,3864,3865,3866,3873,3874,3878,3879,3880,3884,3886,3889,3890,3899,3900,3901,3902,3903,3905,3907,3910,3911,3913,3920,3922,3924,3929,3932,3934,3941,3942,3944,3946,3948,3952,3957,3958,3961,3963,3964,3965,3967,3971,3973,3974,3975,3986,3988,3989,3990,3991,3992,4003,4008,4012,4014,4022,4024,4026,4028,4030,4038,4040,4050,4051,4052,4054,4056,4060,4061,4064,4065,4072,4076,4078,4083,4087,4089,4090,4091,4093,4094,4100,4102,4107,4108,4109,4113,4114,4120,4122,4126,4130,4131,4139,4140,4144,4146,4147,4152,4158,4161,4164,4165,4167,4169,4175,4176,4177,4179,4183,4185,4187,4188,4194,4195,4196,4199,4200,4202,4209,4217,4224,4225,4231,4232,4236,4241,4242,4245,4251,4252,4253,4254,4255,4256,4262,4269,4271,4273,4274,4276,4278,4280,4284,4286,4290,4297,4298,4299,4306,4308,4309,4311,4315,4317,4319,4320,4324,4325,4328,4329,4331,4334,4338,4340,4344,4345,4346,4348,4349,4350,4355,4356,4359,4360,4366,4369,4374,4376,4382,4383,4388,4393,4397,4398,4399,4401,4403,4408,4418,4419,4420,4421,4427,4429,4430,4431,4432,4433,4435,4437,4439,4443,4445,4446,4450,4451,4452,4453,4460,4462,4464,4466,4467,4468,4469,4475,4477,4480,4482,4483,4484]

    PeptidePossibles = {} #Holds all possible peptides
    lowerBound = 0
    upperBound = 0
    z = 0
    x = 0
    while x < len(PepSites):
        y = 0
        while y < len(PepSites):
            Bound1 = PepSites[x]
            Bound2 = PepSites[y]
            if Bound1 < Bound2:
                lowerBound = Bound1+1   # Protien anlysis cuts infront of
                                        # amino acid so we add one to lower
                                        # bound to chose the next one after
                                        # the cut
                upperBound = Bound2
            if Bound2 < Bound1:
                lowerBound = Bound2+1
                upperBound = Bound1
            if 7<upperBound-lowerBound+1<11:
                testBounds = [lowerBound,upperBound]

                #check to see if this peptide is already in there
                testValue = testBounds in PeptidePossibles.values()

                # if not add peptide to list
                if testValue == False:
                    PeptidePossibles[z] = testBounds
                    z+=1
            y+=1
        x+=1
    print(PeptidePossibles)

def PeptidesFunc(mutNumber):

    # This list comes from peptideClevage()
    peptides = {0: [2, 10], 1: [2, 11], 2: [4, 11], 3: [4, 12], 4: [24, 31], 5: [24, 32], 6: [24, 33], 7: [26, 33], 8: [26, 34], 9: [28, 36], 10: [34, 43], 11: [35, 43], 12: [37, 45], 13: [44, 52], 14: [53, 60], 15: [53, 62], 16: [63, 71], 17: [63, 72], 18: [72, 79], 19: [72, 81], 20: [73, 81], 21: [73, 82], 22: [74, 81], 23: [74, 82], 24: [74, 83], 25: [75, 82], 26: [75, 83], 27: [76, 83], 28: [80, 87], 29: [80, 89], 30: [82, 89], 31: [88, 95], 32: [96, 103], 33: [96, 104], 34: [96, 105], 35: [117, 125], 36: [118, 125], 37: [121, 130], 38: [122, 130], 39: [126, 133], 40: [126, 135], 41: [131, 140], 42: [133, 140], 43: [133, 142], 44: [134, 142], 45: [136, 144], 46: [136, 145], 47: [137, 144], 48: [137, 145], 49: [141, 149], 50: [143, 152], 51: [145, 152], 52: [150, 158], 53: [153, 162], 54: [170, 177], 55: [174, 181], 56: [174, 183], 57: [178, 185], 58: [178, 186], 59: [181, 188], 60: [186, 194], 61: [186, 195], 62: [187, 194], 63: [187, 195], 64: [189, 197], 65: [196, 205], 66: [198, 205], 67: [198, 206], 68: [206, 213], 69: [206, 215], 70: [207, 215], 71: [214, 222], 72: [216, 224], 73: [218, 226], 74: [223, 230], 75: [223, 231], 76: [223, 232], 77: [225, 232], 78: [225, 233], 79: [225, 234], 80: [227, 234], 81: [231, 240], 82: [232, 240], 83: [232, 241], 84: [233, 240], 85: [233, 241], 86: [234, 241], 87: [241, 250], 88: [242, 250], 89: [251, 259], 90: [255, 264], 91: [256, 264], 92: [256, 265], 93: [260, 269], 94: [265, 272], 95: [265, 274], 96: [266, 274], 97: [266, 275], 98: [267, 274], 99: [267, 275], 100: [270, 277], 101: [270, 279], 102: [273, 280], 103: [273, 281], 104: [275, 284], 105: [276, 284], 106: [280, 288], 107: [281, 288], 108: [285, 292], 109: [285, 294], 110: [289, 296], 111: [293, 302], 112: [295, 302], 113: [295, 303], 114: [295, 304], 115: [296, 303], 116: [296, 304], 117: [297, 304], 118: [304, 313], 119: [305, 313], 120: [305, 314], 121: [314, 322], 122: [314, 323], 123: [315, 322], 124: [315, 323], 125: [319, 328], 126: [321, 328], 127: [323, 331], 128: [324, 331], 129: [332, 341], 130: [336, 344], 131: [336, 345], 132: [343, 352], 133: [345, 352], 134: [353, 360], 135: [353, 361], 136: [353, 362], 137: [359, 368], 138: [361, 368], 139: [361, 369], 140: [362, 369], 141: [369, 376], 142: [369, 377], 143: [370, 377], 144: [377, 384], 145: [378, 387], 146: [384, 393], 147: [385, 393], 148: [385, 394], 149: [388, 396], 150: [394, 401], 151: [394, 403], 152: [395, 403], 153: [395, 404], 154: [397, 404], 155: [397, 405], 156: [397, 406], 157: [409, 418], 158: [419, 426], 159: [419, 428], 160: [420, 428], 161: [426, 434], 162: [426, 435], 163: [427, 434], 164: [427, 435], 165: [427, 436], 166: [429, 436], 167: [429, 437], 168: [431, 439], 169: [436, 445], 170: [437, 445], 171: [437, 446], 172: [438, 445], 173: [438, 446], 174: [440, 448], 175: [440, 449], 176: [446, 453], 177: [449, 457], 178: [450, 457], 179: [450, 459], 180: [453, 462], 181: [454, 462], 182: [458, 465], 183: [458, 467], 184: [460, 467], 185: [463, 470], 186: [463, 471], 187: [471, 479], 188: [472, 479], 189: [480, 489], 190: [483, 490], 191: [483, 491], 192: [483, 492], 193: [490, 499], 194: [491, 499], 195: [492, 499], 196: [493, 502], 197: [494, 502], 198: [494, 503], 199: [500, 508], 200: [503, 512], 201: [504, 512], 202: [509, 518], 203: [513, 522], 204: [520, 529], 205: [523, 531], 206: [523, 532], 207: [532, 540], 208: [533, 540], 209: [535, 544], 210: [541, 549], 211: [545, 553], 212: [545, 554], 213: [546, 553], 214: [546, 554], 215: [554, 561], 216: [561, 568], 217: [561, 570], 218: [562, 570], 219: [562, 571], 220: [567, 574], 221: [567, 576], 222: [568, 576], 223: [569, 576], 224: [575, 584], 225: [577, 584], 226: [577, 585], 227: [586, 595], 228: [590, 597], 229: [596, 604], 230: [598, 607], 231: [603, 611], 232: [603, 612], 233: [605, 612], 234: [605, 613], 235: [608, 617], 236: [618, 625], 237: [619, 628], 238: [626, 634], 239: [629, 636], 240: [635, 644], 241: [637, 644], 242: [645, 654], 243: [648, 655], 244: [649, 658], 245: [655, 662], 246: [655, 663], 247: [656, 663], 248: [659, 666], 249: [662, 670], 250: [663, 670], 251: [664, 673], 252: [667, 676], 253: [671, 678], 254: [674, 682], 255: [674, 683], 256: [677, 684], 257: [677, 685], 258: [683, 690], 259: [683, 692], 260: [684, 692], 261: [685, 692], 262: [685, 694], 263: [686, 694], 264: [691, 700], 265: [693, 700], 266: [695, 704], 267: [697, 704], 268: [697, 705], 269: [701, 709], 270: [701, 710], 271: [706, 715], 272: [708, 715], 273: [708, 716], 274: [716, 724], 275: [716, 725], 276: [717, 724], 277: [717, 725], 278: [717, 726], 279: [726, 735], 280: [727, 735], 281: [727, 736], 282: [740, 749], 283: [742, 749], 284: [742, 750], 285: [742, 751], 286: [750, 758], 287: [751, 758], 288: [751, 760], 289: [752, 760], 290: [752, 761], 291: [754, 761], 292: [757, 765], 293: [759, 768], 294: [761, 768], 295: [761, 770], 296: [762, 770], 297: [771, 779], 298: [773, 781], 299: [780, 789], 300: [782, 789], 301: [790, 797], 302: [798, 806], 303: [801, 808], 304: [805, 814], 305: [807, 814], 306: [809, 818], 307: [819, 826], 308: [819, 827], 309: [827, 836], 310: [828, 836], 311: [828, 837], 312: [830, 837], 313: [830, 839], 314: [837, 846], 315: [838, 846], 316: [840, 849], 317: [847, 854], 318: [851, 860], 319: [853, 860], 320: [854, 863], 321: [855, 863], 322: [855, 864], 323: [861, 868], 324: [861, 870], 325: [864, 871], 326: [864, 873], 327: [865, 873], 328: [871, 880], 329: [872, 880], 330: [874, 883], 331: [881, 890], 332: [884, 891], 333: [888, 897], 334: [891, 898], 335: [891, 899], 336: [892, 899], 337: [898, 905], 338: [898, 906], 339: [898, 907], 340: [899, 906], 341: [899, 907], 342: [900, 907], 343: [904, 913], 344: [905, 913], 345: [905, 914], 346: [906, 913], 347: [906, 914], 348: [907, 914], 349: [914, 922], 350: [915, 922], 351: [915, 924], 352: [923, 931], 353: [925, 933], 354: [925, 934], 355: [927, 934], 356: [927, 936], 357: [932, 941], 358: [934, 941], 359: [934, 942], 360: [935, 942], 361: [943, 952], 362: [949, 956], 363: [949, 957], 364: [953, 962], 365: [957, 964], 366: [957, 965], 367: [957, 966], 368: [958, 965], 369: [958, 966], 370: [960, 969], 371: [966, 975], 372: [967, 975], 373: [970, 977], 374: [970, 979], 375: [976, 985], 376: [978, 985], 377: [980, 988], 378: [980, 989], 379: [986, 993], 380: [990, 999], 381: [991, 999], 382: [991, 1000], 383: [993, 1000], 384: [993, 1002], 385: [994, 1002], 386: [1007, 1015], 387: [1007, 1016], 388: [1014, 1021], 389: [1016, 1025], 390: [1017, 1025], 391: [1018, 1025], 392: [1022, 1030], 393: [1022, 1031], 394: [1026, 1034], 395: [1026, 1035], 396: [1029, 1037], 397: [1031, 1040], 398: [1032, 1040], 399: [1035, 1044], 400: [1036, 1044], 401: [1045, 1054], 402: [1055, 1062], 403: [1056, 1065], 404: [1059, 1068], 405: [1061, 1068], 406: [1061, 1069], 407: [1063, 1072], 408: [1066, 1075], 409: [1073, 1081], 410: [1076, 1084], 411: [1085, 1092], 412: [1088, 1096], 413: [1088, 1097], 414: [1097, 1105], 415: [1097, 1106], 416: [1098, 1105], 417: [1098, 1106], 418: [1098, 1107], 419: [1104, 1112], 420: [1108, 1117], 421: [1113, 1122], 422: [1118, 1126], 423: [1118, 1127], 424: [1119, 1126], 425: [1119, 1127], 426: [1119, 1128], 427: [1120, 1127], 428: [1120, 1128], 429: [1127, 1134], 430: [1127, 1135], 431: [1127, 1136], 432: [1128, 1135], 433: [1128, 1136], 434: [1128, 1137], 435: [1129, 1136], 436: [1129, 1137], 437: [1136, 1145], 438: [1137, 1145], 439: [1138, 1145], 440: [1146, 1153], 441: [1146, 1155], 442: [1149, 1156], 443: [1149, 1158], 444: [1156, 1165], 445: [1157, 1165], 446: [1166, 1173], 447: [1166, 1175], 448: [1170, 1177], 449: [1170, 1179], 450: [1174, 1183], 451: [1176, 1183], 452: [1178, 1187], 453: [1180, 1187], 454: [1180, 1188], 455: [1180, 1189], 456: [1184, 1191], 457: [1189, 1198], 458: [1190, 1198], 459: [1191, 1198], 460: [1192, 1201], 461: [1195, 1202], 462: [1195, 1204], 463: [1199, 1208], 464: [1202, 1209], 465: [1203, 1212], 466: [1205, 1212], 467: [1213, 1220], 468: [1213, 1222], 469: [1216, 1223], 470: [1216, 1224], 471: [1221, 1230], 472: [1223, 1230], 473: [1231, 1238], 474: [1239, 1247], 475: [1244, 1252], 476: [1248, 1255], 477: [1248, 1257], 478: [1250, 1257], 479: [1250, 1258], 480: [1256, 1265], 481: [1258, 1265], 482: [1259, 1268], 483: [1266, 1275], 484: [1273, 1281], 485: [1273, 1282], 486: [1276, 1284], 487: [1282, 1289], 488: [1282, 1290], 489: [1283, 1290], 490: [1283, 1292], 491: [1285, 1292], 492: [1285, 1293], 493: [1290, 1297], 494: [1294, 1303], 495: [1304, 1311], 496: [1304, 1312], 497: [1312, 1319], 498: [1317, 1324], 499: [1317, 1325], 500: [1320, 1329], 501: [1325, 1332], 502: [1325, 1334], 503: [1326, 1334], 504: [1351, 1359], 505: [1354, 1363], 506: [1360, 1367], 507: [1368, 1376], 508: [1377, 1384], 509: [1377, 1386], 510: [1382, 1389], 511: [1382, 1390], 512: [1385, 1392], 513: [1387, 1395], 514: [1390, 1397], 515: [1390, 1399], 516: [1391, 1399], 517: [1396, 1405], 518: [1398, 1405], 519: [1398, 1406], 520: [1400, 1408], 521: [1400, 1409], 522: [1406, 1413], 523: [1406, 1415], 524: [1407, 1415], 525: [1407, 1416], 526: [1409, 1416], 527: [1416, 1424], 528: [1417, 1424], 529: [1417, 1426], 530: [1427, 1435], 531: [1432, 1440], 532: [1436, 1444], 533: [1438, 1447], 534: [1441, 1449], 535: [1450, 1459], 536: [1452, 1459], 537: [1452, 1460], 538: [1452, 1461], 539: [1460, 1468], 540: [1461, 1468], 541: [1462, 1471], 542: [1463, 1471], 543: [1463, 1472], 544: [1469, 1477], 545: [1472, 1479], 546: [1478, 1486], 547: [1478, 1487], 548: [1480, 1487], 549: [1487, 1495], 550: [1488, 1495], 551: [1491, 1498], 552: [1491, 1500], 553: [1493, 1500], 554: [1493, 1501], 555: [1493, 1502], 556: [1501, 1509], 557: [1502, 1509], 558: [1502, 1511], 559: [1503, 1511], 560: [1503, 1512], 561: [1510, 1517], 562: [1510, 1519], 563: [1512, 1519], 564: [1512, 1521], 565: [1513, 1521], 566: [1513, 1522], 567: [1516, 1525], 568: [1518, 1525], 569: [1523, 1532], 570: [1526, 1534], 571: [1533, 1541], 572: [1533, 1542], 573: [1535, 1542], 574: [1535, 1543], 575: [1542, 1550], 576: [1543, 1550], 577: [1544, 1553], 578: [1556, 1564], 579: [1565, 1572], 580: [1565, 1573], 581: [1568, 1575], 582: [1568, 1576], 583: [1574, 1583], 584: [1576, 1583], 585: [1576, 1585], 586: [1577, 1585], 587: [1584, 1593], 588: [1586, 1593], 589: [1586, 1594], 590: [1591, 1599], 591: [1595, 1604], 592: [1598, 1605], 593: [1598, 1606], 594: [1598, 1607], 595: [1600, 1607], 596: [1605, 1612], 597: [1605, 1613], 598: [1606, 1613], 599: [1607, 1616], 600: [1608, 1616], 601: [1614, 1623], 602: [1617, 1625], 603: [1624, 1631], 604: [1624, 1632], 605: [1630, 1638], 606: [1630, 1639], 607: [1632, 1639], 608: [1632, 1641], 609: [1633, 1641], 610: [1655, 1663], 611: [1655, 1664], 612: [1657, 1664], 613: [1657, 1665], 614: [1657, 1666], 615: [1658, 1665], 616: [1658, 1666], 617: [1667, 1676], 618: [1677, 1684], 619: [1684, 1691], 620: [1684, 1693], 621: [1685, 1693], 622: [1690, 1699], 623: [1692, 1699], 624: [1692, 1701], 625: [1694, 1701], 626: [1694, 1702], 627: [1702, 1710], 628: [1702, 1711], 629: [1703, 1710], 630: [1703, 1711], 631: [1711, 1718], 632: [1711, 1720], 633: [1712, 1720], 634: [1717, 1726], 635: [1719, 1726], 636: [1727, 1735], 637: [1734, 1742], 638: [1743, 1752], 639: [1750, 1757], 640: [1753, 1760], 641: [1758, 1765], 642: [1761, 1768], 643: [1761, 1770], 644: [1771, 1779], 645: [1785, 1792], 646: [1785, 1793], 647: [1785, 1794], 648: [1806, 1814], 649: [1811, 1818], 650: [1811, 1820], 651: [1812, 1820], 652: [1813, 1820], 653: [1813, 1822], 654: [1815, 1822], 655: [1823, 1832], 656: [1826, 1834], 657: [1835, 1843], 658: [1844, 1853], 659: [1849, 1856], 660: [1854, 1862], 661: [1855, 1862], 662: [1855, 1864], 663: [1857, 1864], 664: [1884, 1892], 665: [1884, 1893], 666: [1893, 1900], 667: [1893, 1902], 668: [1894, 1902], 669: [1895, 1902], 670: [1901, 1909], 671: [1901, 1910], 672: [1903, 1910], 673: [1910, 1918], 674: [1911, 1918], 675: [1919, 1927], 676: [1925, 1934], 677: [1928, 1935], 678: [1928, 1937], 679: [1932, 1939], 680: [1953, 1962], 681: [1954, 1962], 682: [1963, 1972], 683: [1969, 1976], 684: [1970, 1979], 685: [1973, 1982], 686: [1977, 1986], 687: [1980, 1987], 688: [1980, 1989], 689: [1983, 1990], 690: [1987, 1996], 691: [1988, 1996], 692: [1997, 2006], 693: [2007, 2016], 694: [2010, 2019], 695: [2017, 2026], 696: [2020, 2027], 697: [2020, 2029], 698: [2027, 2036], 699: [2028, 2036], 700: [2032, 2040], 701: [2034, 2042], 702: [2043, 2051], 703: [2043, 2052], 704: [2048, 2057], 705: [2052, 2059], 706: [2055, 2064], 707: [2060, 2069], 708: [2065, 2072], 709: [2072, 2081], 710: [2073, 2081], 711: [2073, 2082], 712: [2082, 2089], 713: [2082, 2091], 714: [2083, 2091], 715: [2088, 2097], 716: [2090, 2097], 717: [2092, 2101], 718: [2094, 2101], 719: [2094, 2103], 720: [2098, 2105], 721: [2098, 2106], 722: [2102, 2111], 723: [2104, 2111], 724: [2104, 2113], 725: [2106, 2113], 726: [2106, 2114], 727: [2106, 2115], 728: [2107, 2114], 729: [2107, 2115], 730: [2107, 2116], 731: [2112, 2120], 732: [2114, 2122], 733: [2114, 2123], 734: [2115, 2122], 735: [2115, 2123], 736: [2115, 2124], 737: [2116, 2123], 738: [2116, 2124], 739: [2117, 2124], 740: [2123, 2132], 741: [2124, 2132], 742: [2124, 2133], 743: [2125, 2132], 744: [2125, 2133], 745: [2125, 2134], 746: [2133, 2141], 747: [2134, 2141], 748: [2138, 2147], 749: [2142, 2149], 750: [2142, 2150], 751: [2148, 2157], 752: [2149, 2157], 753: [2150, 2157], 754: [2151, 2160], 755: [2161, 2168], 756: [2161, 2170], 757: [2162, 2170], 758: [2162, 2171], 759: [2165, 2172], 760: [2171, 2180], 761: [2172, 2180], 762: [2173, 2180], 763: [2202, 2209], 764: [2202, 2210], 765: [2202, 2211], 766: [2210, 2218], 767: [2211, 2218], 768: [2214, 2223], 769: [2219, 2226], 770: [2224, 2233], 771: [2225, 2233], 772: [2225, 2234], 773: [2226, 2233], 774: [2226, 2234], 775: [2227, 2234], 776: [2234, 2241], 777: [2239, 2248], 778: [2242, 2250], 779: [2242, 2251], 780: [2249, 2258], 781: [2251, 2258], 782: [2256, 2263], 783: [2256, 2264], 784: [2256, 2265], 785: [2259, 2266], 786: [2259, 2268], 787: [2263, 2271], 788: [2263, 2272], 789: [2264, 2271], 790: [2264, 2272], 791: [2265, 2272], 792: [2272, 2279], 793: [2272, 2281], 794: [2273, 2281], 795: [2280, 2287], 796: [2282, 2290], 797: [2286, 2294], 798: [2287, 2294], 799: [2291, 2298], 800: [2293, 2301], 801: [2293, 2302], 802: [2295, 2302], 803: [2295, 2304], 804: [2303, 2312], 805: [2305, 2312], 806: [2313, 2320], 807: [2313, 2321], 808: [2313, 2322], 809: [2317, 2324], 810: [2321, 2329], 811: [2321, 2330], 812: [2322, 2329], 813: [2322, 2330], 814: [2323, 2330], 815: [2325, 2333], 816: [2330, 2337], 817: [2330, 2339], 818: [2331, 2339], 819: [2336, 2345], 820: [2338, 2345], 821: [2338, 2347], 822: [2340, 2347], 823: [2346, 2355], 824: [2348, 2355], 825: [2356, 2363], 826: [2364, 2373], 827: [2371, 2379], 828: [2371, 2380], 829: [2374, 2382], 830: [2377, 2386], 831: [2378, 2386], 832: [2378, 2387], 833: [2380, 2387], 834: [2387, 2394], 835: [2387, 2396], 836: [2388, 2396], 837: [2395, 2402], 838: [2397, 2406], 839: [2399, 2406], 840: [2399, 2407], 841: [2402, 2409], 842: [2402, 2410], 843: [2402, 2411], 844: [2403, 2410], 845: [2403, 2411], 846: [2408, 2417], 847: [2410, 2417], 848: [2410, 2418], 849: [2411, 2418], 850: [2411, 2420], 851: [2412, 2420], 852: [2418, 2427], 853: [2419, 2427], 854: [2419, 2428], 855: [2421, 2428], 856: [2421, 2429], 857: [2428, 2435], 858: [2428, 2436], 859: [2429, 2436], 860: [2429, 2438], 861: [2430, 2438], 862: [2430, 2439], 863: [2433, 2441], 864: [2436, 2445], 865: [2437, 2445], 866: [2439, 2447], 867: [2440, 2447], 868: [2440, 2449], 869: [2442, 2449], 870: [2442, 2451], 871: [2450, 2458], 872: [2452, 2460], 873: [2453, 2460], 874: [2453, 2462], 875: [2459, 2466], 876: [2459, 2467], 877: [2467, 2476], 878: [2468, 2476], 879: [2468, 2477], 880: [2478, 2487], 881: [2488, 2495], 882: [2491, 2500], 883: [2492, 2500], 884: [2492, 2501], 885: [2493, 2500], 886: [2493, 2501], 887: [2493, 2502], 888: [2494, 2501], 889: [2494, 2502], 890: [2494, 2503], 891: [2496, 2503], 892: [2501, 2509], 893: [2501, 2510], 894: [2502, 2509], 895: [2502, 2510], 896: [2503, 2510], 897: [2508, 2516], 898: [2511, 2520], 899: [2517, 2526], 900: [2521, 2528], 901: [2521, 2530], 902: [2523, 2530], 903: [2523, 2532], 904: [2531, 2539], 905: [2531, 2540], 906: [2533, 2540], 907: [2533, 2541], 908: [2533, 2542], 909: [2540, 2547], 910: [2540, 2549], 911: [2541, 2549], 912: [2542, 2549], 913: [2548, 2555], 914: [2550, 2558], 915: [2556, 2563], 916: [2556, 2564], 917: [2559, 2568], 918: [2564, 2573], 919: [2565, 2573], 920: [2565, 2574], 921: [2569, 2576], 922: [2571, 2579], 923: [2574, 2581], 924: [2580, 2587], 925: [2580, 2588], 926: [2580, 2589], 927: [2582, 2589], 928: [2582, 2590], 929: [2591, 2600], 930: [2594, 2602], 931: [2603, 2612], 932: [2606, 2613], 933: [2606, 2614], 934: [2606, 2615], 935: [2607, 2614], 936: [2607, 2615], 937: [2613, 2622], 938: [2614, 2622], 939: [2615, 2622], 940: [2618, 2627], 941: [2623, 2630], 942: [2623, 2631], 943: [2628, 2635], 944: [2628, 2636], 945: [2628, 2637], 946: [2630, 2637], 947: [2634, 2642], 948: [2635, 2642], 949: [2635, 2644], 950: [2636, 2644], 951: [2637, 2644], 952: [2637, 2646], 953: [2638, 2646], 954: [2643, 2651], 955: [2643, 2652], 956: [2645, 2652], 957: [2645, 2654], 958: [2647, 2654], 959: [2647, 2656], 960: [2652, 2661], 961: [2653, 2661], 962: [2653, 2662], 963: [2655, 2662], 964: [2657, 2666], 965: [2658, 2666], 966: [2658, 2667], 967: [2659, 2666], 968: [2659, 2667], 969: [2667, 2675], 970: [2667, 2676], 971: [2668, 2675], 972: [2668, 2676], 973: [2668, 2677], 974: [2677, 2686], 975: [2678, 2686], 976: [2680, 2689], 977: [2681, 2689], 978: [2681, 2690], 979: [2687, 2694], 980: [2690, 2697], 981: [2690, 2698], 982: [2691, 2698], 983: [2698, 2706], 984: [2698, 2707], 985: [2699, 2706], 986: [2699, 2707], 987: [2699, 2708], 988: [2707, 2714], 989: [2707, 2715], 990: [2708, 2715], 991: [2715, 2723], 992: [2716, 2723], 993: [2724, 2731], 994: [2728, 2735], 995: [2728, 2736], 996: [2728, 2737], 997: [2736, 2743], 998: [2738, 2747], 999: [2739, 2747], 1000: [2748, 2755], 1001: [2748, 2756], 1002: [2759, 2768], 1003: [2760, 2768], 1004: [2761, 2768], 1005: [2769, 2776], 1006: [2769, 2777], 1007: [2772, 2781], 1008: [2775, 2782], 1009: [2775, 2784], 1010: [2777, 2784], 1011: [2782, 2791], 1012: [2783, 2791], 1013: [2792, 2800], 1014: [2801, 2810], 1015: [2813, 2822], 1016: [2814, 2822], 1017: [2814, 2823], 1018: [2815, 2822], 1019: [2815, 2823], 1020: [2815, 2824], 1021: [2823, 2831], 1022: [2824, 2831], 1023: [2837, 2844], 1024: [2845, 2852], 1025: [2845, 2853], 1026: [2850, 2857], 1027: [2853, 2862], 1028: [2854, 2862], 1029: [2858, 2867], 1030: [2868, 2876], 1031: [2870, 2879], 1032: [2900, 2908], 1033: [2900, 2909], 1034: [2901, 2908], 1035: [2901, 2909], 1036: [2909, 2918], 1037: [2910, 2918], 1038: [2941, 2949], 1039: [2950, 2958], 1040: [2954, 2962], 1041: [2956, 2964], 1042: [2965, 2973], 1043: [2981, 2989], 1044: [2985, 2992], 1045: [2985, 2994], 1046: [2990, 2997], 1047: [2998, 3007], 1048: [3009, 3018], 1049: [3014, 3022], 1050: [3015, 3022], 1051: [3023, 3030], 1052: [3030, 3038], 1053: [3031, 3038], 1054: [3037, 3045], 1055: [3039, 3047], 1056: [3039, 3048], 1057: [3043, 3050], 1058: [3043, 3051], 1059: [3046, 3054], 1060: [3046, 3055], 1061: [3048, 3055], 1062: [3048, 3057], 1063: [3049, 3057], 1064: [3051, 3060], 1065: [3052, 3060], 1066: [3055, 3062], 1067: [3061, 3069], 1068: [3074, 3081], 1069: [3074, 3083], 1070: [3075, 3083], 1071: [3076, 3083], 1072: [3077, 3086], 1073: [3082, 3089], 1074: [3082, 3090], 1075: [3087, 3095], 1076: [3089, 3097], 1077: [3089, 3098], 1078: [3090, 3097], 1079: [3090, 3098], 1080: [3091, 3098], 1081: [3091, 3100], 1082: [3101, 3110], 1083: [3111, 3120], 1084: [3112, 3120], 1085: [3114, 3122], 1086: [3137, 3144], 1087: [3141, 3150], 1088: [3143, 3150], 1089: [3151, 3160], 1090: [3158, 3167], 1091: [3163, 3172], 1092: [3165, 3172], 1093: [3165, 3173], 1094: [3168, 3175], 1095: [3168, 3176], 1096: [3174, 3183], 1097: [3176, 3183], 1098: [3176, 3185], 1099: [3177, 3185], 1100: [3184, 3192], 1101: [3186, 3194], 1102: [3186, 3195], 1103: [3189, 3196], 1104: [3195, 3204], 1105: [3196, 3204], 1106: [3197, 3204], 1107: [3205, 3213], 1108: [3209, 3217], 1109: [3209, 3218], 1110: [3211, 3218], 1111: [3216, 3225], 1112: [3218, 3225], 1113: [3219, 3228], 1114: [3231, 3240], 1115: [3241, 3250], 1116: [3245, 3254], 1117: [3246, 3254], 1118: [3246, 3255], 1119: [3251, 3258], 1120: [3251, 3260], 1121: [3276, 3285], 1122: [3277, 3285], 1123: [3277, 3286], 1124: [3279, 3286], 1125: [3283, 3291], 1126: [3287, 3296], 1127: [3304, 3313], 1128: [3311, 3319], 1129: [3311, 3320], 1130: [3320, 3327], 1131: [3325, 3332], 1132: [3375, 3382], 1133: [3383, 3390], 1134: [3383, 3392], 1135: [3390, 3397], 1136: [3393, 3401], 1137: [3393, 3402], 1138: [3402, 3409], 1139: [3402, 3410], 1140: [3403, 3410], 1141: [3409, 3417], 1142: [3410, 3417], 1143: [3410, 3419], 1144: [3411, 3419], 1145: [3414, 3421], 1146: [3414, 3422], 1147: [3414, 3423], 1148: [3418, 3426], 1149: [3420, 3428], 1150: [3420, 3429], 1151: [3422, 3429], 1152: [3422, 3430], 1153: [3423, 3430], 1154: [3427, 3435], 1155: [3429, 3437], 1156: [3429, 3438], 1157: [3430, 3437], 1158: [3430, 3438], 1159: [3431, 3438], 1160: [3456, 3464], 1161: [3457, 3464], 1162: [3463, 3470], 1163: [3471, 3480], 1164: [3476, 3484], 1165: [3481, 3489], 1166: [3485, 3492], 1167: [3490, 3498], 1168: [3493, 3502], 1169: [3499, 3508], 1170: [3503, 3510], 1171: [3511, 3520], 1172: [3514, 3521], 1173: [3521, 3530], 1174: [3522, 3530], 1175: [3522, 3531], 1176: [3525, 3532], 1177: [3531, 3538], 1178: [3532, 3541], 1179: [3533, 3541], 1180: [3538, 3545], 1181: [3542, 3549], 1182: [3542, 3551], 1183: [3546, 3553], 1184: [3550, 3557], 1185: [3550, 3558], 1186: [3553, 3562], 1187: [3554, 3562], 1188: [3557, 3564], 1189: [3557, 3566], 1190: [3558, 3566], 1191: [3559, 3566], 1192: [3559, 3568], 1193: [3563, 3572], 1194: [3565, 3572], 1195: [3565, 3573], 1196: [3569, 3577], 1197: [3578, 3586], 1198: [3580, 3589], 1199: [3594, 3601], 1200: [3594, 3602], 1201: [3594, 3603], 1202: [3603, 3612], 1203: [3604, 3612], 1204: [3606, 3614], 1205: [3608, 3616], 1206: [3608, 3617], 1207: [3615, 3623], 1208: [3615, 3624], 1209: [3617, 3624], 1210: [3617, 3626], 1211: [3618, 3626], 1212: [3618, 3627], 1213: [3620, 3627], 1214: [3625, 3634], 1215: [3627, 3634], 1216: [3631, 3640], 1217: [3635, 3644], 1218: [3641, 3648], 1219: [3645, 3654], 1220: [3649, 3656], 1221: [3649, 3658], 1222: [3655, 3663], 1223: [3657, 3666], 1224: [3659, 3666], 1225: [3659, 3667], 1226: [3659, 3668], 1227: [3664, 3671], 1228: [3667, 3675], 1229: [3668, 3675], 1230: [3676, 3684], 1231: [3683, 3692], 1232: [3685, 3692], 1233: [3690, 3699], 1234: [3693, 3701], 1235: [3702, 3710], 1236: [3704, 3712], 1237: [3704, 3713], 1238: [3705, 3712], 1239: [3705, 3713], 1240: [3705, 3714], 1241: [3714, 3723], 1242: [3715, 3723], 1243: [3717, 3726], 1244: [3727, 3736], 1245: [3731, 3738], 1246: [3731, 3739], 1247: [3737, 3746], 1248: [3739, 3746], 1249: [3739, 3747], 1250: [3740, 3747], 1251: [3747, 3754], 1252: [3747, 3755], 1253: [3748, 3755], 1254: [3755, 3762], 1255: [3755, 3763], 1256: [3755, 3764], 1257: [3756, 3763], 1258: [3756, 3764], 1259: [3756, 3765], 1260: [3763, 3772], 1261: [3764, 3772], 1262: [3765, 3772], 1263: [3765, 3774], 1264: [3766, 3774], 1265: [3773, 3782], 1266: [3775, 3782], 1267: [3777, 3786], 1268: [3779, 3786], 1269: [3779, 3787], 1270: [3780, 3787], 1271: [3783, 3790], 1272: [3783, 3792], 1273: [3791, 3798], 1274: [3793, 3802], 1275: [3794, 3802], 1276: [3794, 3803], 1277: [3799, 3807], 1278: [3803, 3810], 1279: [3804, 3813], 1280: [3805, 3813], 1281: [3808, 3817], 1282: [3814, 3822], 1283: [3818, 3826], 1284: [3818, 3827], 1285: [3823, 3830], 1286: [3827, 3835], 1287: [3828, 3835], 1288: [3836, 3845], 1289: [3843, 3851], 1290: [3846, 3853], 1291: [3846, 3854], 1292: [3846, 3855], 1293: [3855, 3864], 1294: [3856, 3864], 1295: [3856, 3865], 1296: [3865, 3873], 1297: [3865, 3874], 1298: [3866, 3873], 1299: [3866, 3874], 1300: [3867, 3874], 1301: [3875, 3884], 1302: [3879, 3886], 1303: [3880, 3889], 1304: [3881, 3889], 1305: [3881, 3890], 1306: [3890, 3899], 1307: [3891, 3899], 1308: [3891, 3900], 1309: [3900, 3907], 1310: [3901, 3910], 1311: [3902, 3910], 1312: [3902, 3911], 1313: [3903, 3910], 1314: [3903, 3911], 1315: [3904, 3911], 1316: [3904, 3913], 1317: [3906, 3913], 1318: [3911, 3920], 1319: [3912, 3920], 1320: [3914, 3922], 1321: [3921, 3929], 1322: [3923, 3932], 1323: [3925, 3932], 1324: [3925, 3934], 1325: [3933, 3941], 1326: [3933, 3942], 1327: [3935, 3942], 1328: [3935, 3944], 1329: [3943, 3952], 1330: [3945, 3952], 1331: [3949, 3957], 1332: [3949, 3958], 1333: [3953, 3961], 1334: [3958, 3965], 1335: [3958, 3967], 1336: [3959, 3967], 1337: [3962, 3971], 1338: [3964, 3971], 1339: [3964, 3973], 1340: [3965, 3973], 1341: [3965, 3974], 1342: [3966, 3973], 1343: [3966, 3974], 1344: [3966, 3975], 1345: [3968, 3975], 1346: [4004, 4012], 1347: [4013, 4022], 1348: [4015, 4022], 1349: [4015, 4024], 1350: [4023, 4030], 1351: [4029, 4038], 1352: [4031, 4038], 1353: [4031, 4040], 1354: [4041, 4050], 1355: [4051, 4060], 1356: [4052, 4060], 1357: [4052, 4061], 1358: [4053, 4060], 1359: [4053, 4061], 1360: [4055, 4064], 1361: [4057, 4064], 1362: [4057, 4065], 1363: [4065, 4072], 1364: [4079, 4087], 1365: [4084, 4091], 1366: [4084, 4093], 1367: [4091, 4100], 1368: [4092, 4100], 1369: [4094, 4102], 1370: [4095, 4102], 1371: [4101, 4108], 1372: [4101, 4109], 1373: [4114, 4122], 1374: [4115, 4122], 1375: [4121, 4130], 1376: [4123, 4130], 1377: [4123, 4131], 1378: [4131, 4139], 1379: [4131, 4140], 1380: [4132, 4139], 1381: [4132, 4140], 1382: [4140, 4147], 1383: [4145, 4152], 1384: [4153, 4161], 1385: [4159, 4167], 1386: [4162, 4169], 1387: [4166, 4175], 1388: [4168, 4175], 1389: [4168, 4176], 1390: [4168, 4177], 1391: [4170, 4177], 1392: [4170, 4179], 1393: [4176, 4183], 1394: [4176, 4185], 1395: [4177, 4185], 1396: [4178, 4185], 1397: [4178, 4187], 1398: [4180, 4187], 1399: [4180, 4188], 1400: [4186, 4194], 1401: [4186, 4195], 1402: [4188, 4195], 1403: [4188, 4196], 1404: [4189, 4196], 1405: [4195, 4202], 1406: [4200, 4209], 1407: [4201, 4209], 1408: [4210, 4217], 1409: [4218, 4225], 1410: [4225, 4232], 1411: [4232, 4241], 1412: [4233, 4241], 1413: [4233, 4242], 1414: [4237, 4245], 1415: [4242, 4251], 1416: [4243, 4251], 1417: [4243, 4252], 1418: [4246, 4253], 1419: [4246, 4254], 1420: [4246, 4255], 1421: [4253, 4262], 1422: [4254, 4262], 1423: [4255, 4262], 1424: [4263, 4271], 1425: [4270, 4278], 1426: [4272, 4280], 1427: [4275, 4284], 1428: [4277, 4284], 1429: [4277, 4286], 1430: [4279, 4286], 1431: [4281, 4290], 1432: [4291, 4298], 1433: [4291, 4299], 1434: [4298, 4306], 1435: [4299, 4306], 1436: [4299, 4308], 1437: [4300, 4308], 1438: [4300, 4309], 1439: [4307, 4315], 1440: [4309, 4317], 1441: [4310, 4317], 1442: [4310, 4319], 1443: [4312, 4319], 1444: [4312, 4320], 1445: [4316, 4324], 1446: [4316, 4325], 1447: [4318, 4325], 1448: [4320, 4328], 1449: [4320, 4329], 1450: [4321, 4328], 1451: [4321, 4329], 1452: [4325, 4334], 1453: [4326, 4334], 1454: [4329, 4338], 1455: [4330, 4338], 1456: [4332, 4340], 1457: [4335, 4344], 1458: [4339, 4346], 1459: [4339, 4348], 1460: [4341, 4348], 1461: [4341, 4349], 1462: [4341, 4350], 1463: [4346, 4355], 1464: [4347, 4355], 1465: [4347, 4356], 1466: [4349, 4356], 1467: [4350, 4359], 1468: [4351, 4359], 1469: [4351, 4360], 1470: [4357, 4366], 1471: [4360, 4369], 1472: [4361, 4369], 1473: [4367, 4374], 1474: [4367, 4376], 1475: [4375, 4382], 1476: [4375, 4383], 1477: [4384, 4393], 1478: [4389, 4397], 1479: [4389, 4398], 1480: [4394, 4401], 1481: [4394, 4403], 1482: [4399, 4408], 1483: [4400, 4408], 1484: [4409, 4418], 1485: [4419, 4427], 1486: [4420, 4427], 1487: [4420, 4429], 1488: [4421, 4429], 1489: [4421, 4430], 1490: [4422, 4429], 1491: [4422, 4430], 1492: [4422, 4431], 1493: [4428, 4435], 1494: [4428, 4437], 1495: [4430, 4437], 1496: [4430, 4439], 1497: [4431, 4439], 1498: [4432, 4439], 1499: [4434, 4443], 1500: [4436, 4443], 1501: [4436, 4445], 1502: [4438, 4445], 1503: [4438, 4446], 1504: [4444, 4451], 1505: [4444, 4452], 1506: [4444, 4453], 1507: [4446, 4453], 1508: [4451, 4460], 1509: [4452, 4460], 1510: [4453, 4460], 1511: [4453, 4462], 1512: [4454, 4462], 1513: [4461, 4468], 1514: [4461, 4469], 1515: [4467, 4475], 1516: [4468, 4475], 1517: [4468, 4477], 1518: [4469, 4477], 1519: [4470, 4477], 1520: [4476, 4483], 1521: [4476, 4484]}
    
    PossiblePeptides = {}
    y = 0
    for x in peptides: # search sll peptides for peptides containing this number
        lowerBound = peptides[x][0]
        upperBound = peptides[x][1]
        if lowerBound < mutNumber < upperBound:
            PossiblePeptides[y] = peptides[x]
            y+=1
    return PossiblePeptides


def LeftorRight(mutNumber):
    if mutNumber == "N/A":
        return "N/A"
    mutNumber = int(mutNumber)

    #Generates a list of all possible peptides containing this position
    PossiblePeptides = PeptidesFunc(mutNumber)

    
    LowerBound = 0
    UpperBound = 0
    Right = 0
    Left = 0

    # For each peptide in the list of possibles
    # Compute if it is is on the left or right side
    
    for peptide in PossiblePeptides:
        LowerBound = PossiblePeptides[peptide][0]
        UpperBound = PossiblePeptides[peptide][1]
        
        PeptideLength = UpperBound-LowerBound+1 # add 1 to account for petide
                                                # clevage        
        if PeptideLength == 8:
            if mutNumber < 4+LowerBound:
                Left += 1
            elif mutNumber >= 4+LowerBound:
                Right += 1
        elif PeptideLength == 9:
            if mutNumber < 4+LowerBound:
                Left += 1
            elif mutNumber > 4+LowerBound:
                Right += 1
        elif PeptideLength == 10:
            if mutNumber < 5+LowerBound:
                Left += 1
            elif mutNumber >= 5+LowerBound:
                Right += 1
        else:
            print(PeptideLength)    # Another code check. Should never print this

    # If all mutations are right it is right
    # If all mutations are left it is left
    if Right != 0 and Left == 0:
        return "Right"
    elif Left != 0 and Right == 0:
        return "Left"
    elif Right != 0  and Left != 0:
        return "Both"
    elif Right == 0 and Left == 0:
        return "N/A"
    else:
        print("blank")  # never returns this. more of a checkpoint to make sure
                        # code is good

def ComplimentaryFunction(CDR3,Mutation):
    '''A positive value denotes a complementary score'''
    
    NCPR = CalculateNCPR(CDR3)
    AA_Charge_Δ = get_AA_charge(Mutation)
    NCPR_CS = AA_Charge_Δ * NCPR * -1
    if NCPR_CS > 0:
        return True
    else:
        return False
def NCPR_CS_Function(CDR3,Mutation):
    '''A positive value denotes a complementary score'''
    
    NCPR = CalculateNCPR(CDR3)
    AA_Charge_Δ = get_AA_charge(Mutation)
    NCPR_CS = AA_Charge_Δ * NCPR * -1
    return NCPR_CS

# DataFile["{lettercode}{cellRow}".format(lettercode = 'A', cellRow = X)] = "Patient ID"
# Clinical["B{cellRow}".format(cellRow = y)]
workbook = load_workbook(filename="ExcelOutput.xlsx")
DataFile = workbook['Data']

def ExcelOutput(Major_Dictionary,Pathway,AliveVar):
    
    Alphabet = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N',
                'O','P','Q','R','S','T','U','V','W','X','Y','Z']

    x = 1
    for Patient_ID in Major_Dictionary:
        DataFile["A{cellRow}".format(cellRow = x)] = "Patient ID"
        DataFile["B{cellRow}".format(cellRow = x)] = Major_Dictionary[Patient_ID]["Patient ID"]
        x += 1
        
        DataFile["A{cellRow}".format(cellRow = x)] = "Months Left"
        DataFile["B{cellRow}".format(cellRow = x)] = Major_Dictionary[Patient_ID]["Months Left"]
        x += 1
        
        DataFile["A{cellRow}".format(cellRow = x)] = "Determined Complimentary"
        DataFile["B{cellRow}".format(cellRow = x)] = Major_Dictionary[Patient_ID]["Complimentary"]
        x += 1

        ColNum = 2
        DataFile["C{cellRow}".format(cellRow = x)] = "TRA"
        x += 1
        for CDR3 in Major_Dictionary[Patient_ID]["TRA CDR3"]:
            DataFile["{lettercode}{cellRow}".format(lettercode = Alphabet[ColNum], cellRow = x)] = CDR3
            ColNum += 1
        if ColNum == 2:
            ColNum = 3
            
        DataFile["{lettercode}{cellRow}".format(lettercode = Alphabet[ColNum],cellRow = x-1)] = "TRB"
        
        TRBStart = ColNum
        for CDR3 in Major_Dictionary[Patient_ID]["TRB CDR3"]:
            DataFile["{lettercode}{cellRow}".format(lettercode = Alphabet[ColNum], cellRow = x)] = CDR3
            ColNum += 1

        x += 1
        DataFile["A{cellRow}".format(cellRow = x)] = "Mutations"
        if Major_Dictionary[Patient_ID]["Mutations"] != []:
            for Mutation in Major_Dictionary[Patient_ID]["Mutations"]:
                ColNum = 2
                DataFile["B{cellRow}".format(cellRow = x)] = Mutation
                
                if Pathway == "Old":
                    MutationSide = "Both"
                        
                else:
                    MutationSide = LeftorRight(Mutation[1:len(Mutation)-1])
                    
                if MutationSide == "Left":
                    for CDR3 in Major_Dictionary[Patient_ID]["TRA CDR3"]:
                        DataFile["{lettercode}{cellRow}".format(lettercode = Alphabet[ColNum], cellRow = x)] = NCPR_CS_Function(CDR3,Mutation)
                        ColNum += 1
                elif MutationSide == "Right":
                    for CDR3 in Major_Dictionary[Patient_ID]["TRB CDR3"]:
                        DataFile["{lettercode}{cellRow}".format(lettercode = Alphabet[ColNum+TRBStart-2], cellRow = x)] = NCPR_CS_Function(CDR3,Mutation)
                        ColNum += 1
                elif MutationSide == "Both":
                    for CDR3 in Major_Dictionary[Patient_ID]["TRA CDR3"]:
                        DataFile["{lettercode}{cellRow}".format(lettercode = Alphabet[ColNum], cellRow = x)] = NCPR_CS_Function(CDR3,Mutation)
                        ColNum += 1
                    ColNum = 0
                    for CDR3 in Major_Dictionary[Patient_ID]["TRB CDR3"]:
                        DataFile["{lettercode}{cellRow}".format(lettercode = Alphabet[ColNum+TRBStart], cellRow = x)] = NCPR_CS_Function(CDR3,Mutation)
                        ColNum += 1
                elif MutationSide == "N/A":
                    print("No Peptides", Patient_ID, Mutation)
                x += 1
        else:
            x += 1
        x += 1

    workbook.save(filename="ExcelOutput_{pathway}_{aliveVar}.xlsx".format(pathway = Pathway, aliveVar = AliveVar))






    

    
